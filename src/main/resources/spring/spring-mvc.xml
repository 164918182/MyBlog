<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 使用注解的包，包括子集 -->
	<context:component-scan base-package="com.java.blog.controller" />
	<!-- 配置Fastjson支持,因为使用了swagger貌似是不支持fastjson，如果不需要可以打开配置 -->
	<mvc:annotation-driven>
		<!--<mvc:message-converters register-defaults="true"> <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"> 
			<property name="supportedMediaTypes"> <list> <value>text/html;charset=UTF-8</value> 
			<value>application/json</value> </list> </property> <property name="features"> 
			<list> <value>WriteMapNullValue</value> <value>WriteNullNumberAsZero </value> 
			<value>WriteNullStringAsEmpty </value> <value>WriteNullListAsEmpty </value> 
			<value>WriteNullBooleanAsFalse </value> </list> </property> </bean> <bean 
			class="org.springframework.http.converter.ResourceHttpMessageConverter" /> 
			</mvc:message-converters> -->
	</mvc:annotation-driven>

	<mvc:default-servlet-handler />
	<!-- 视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".html" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />

	</bean>


</beans>  